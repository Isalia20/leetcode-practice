class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        queue = []
        fresh_orange = 0
        for row in range(len(grid)):
            for col in range(len(grid[0])):
                if grid[row][col] == 2:
                    queue.append((row, col, 0))
                elif grid[row][col] == 1:
                    fresh_orange += 1
        
        final_minute = 0
        
        while queue:
            row, col, minute = queue.pop(0)
            
            if grid[row][col]==1:
                fresh_orange-=1
                final_minute = minute
           
            grid[row][col] = 2
            # Appending rotting oranges
            if row > 0 and grid[row - 1][col] == 1:
                queue.append((row - 1, col, minute + 1))
            if col > 0 and grid[row][col - 1] == 1:
                queue.append((row, col - 1, minute + 1))
            if row < len(grid) - 1 and grid[row + 1][col] == 1:
                queue.append((row + 1, col, minute + 1))
            if col < len(grid[0]) - 1 and grid[row][col + 1] == 1:
                queue.append((row, col + 1, minute + 1))
                
        if  fresh_orange > 0:
            return -1
        else:
            return final_minute
        
        
