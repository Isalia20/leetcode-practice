# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        
        i = 0
        num_1 = 0
        num_2 = 0
        while l1:
            num_1 += l1.val  * (10 ** i)
            l1 = l1.next
            i += 1
            
        i = 0
        while l2:
            num_2 += l2.val * (10 ** i)
            l2 = l2.next
            i += 1
        
        # Reverse the num
        num = str(num_1 + num_2)
        
        
        last_node = ListNode(int(num[0]), None)
        i = 1
        while i < len(num):
            head = ListNode(int(num[i]), last_node)
            last_node = head
            i += 1
        
        if i >= len(num):
            head = None
        
        if head is None:
            return last_node
        else:
            return head
            
