# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None:
            return head
        
        stack = []
        while head:
            stack.append(head)
            head = head.next
        
        first_val = stack.pop(-1)
        
        rev_list = ListNode(first_val.val, None)
        dummy = rev_list
        
        while stack:
            next_val = stack.pop(-1)
            next_val.next = None
            rev_list.next = next_val
            rev_list = rev_list.next
        return dummy
            
            
